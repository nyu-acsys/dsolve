qualif NNeg(x): 0 <= x;;
qualif Eq3(x): x = 3;;
qualif Eq1(x): x = 1;;
qualif Eq0(x): x = 0;;
qualif LtLenSrc(x): x < Array.length src;;
qualif LeLenSrc(x): x <= Array.length src;;
qualif EqLenSrc(x): x = Array.length src;;
qualif LeLenDes(x): x <= Array.length des;;
qualif EqLenDes(x): x = Array.length des;;
qualif EqSrcLen(x): Array.length x = Array.length src;;
qualif EqLen3(x): Array.length x = 3;;

let rec bcopy_aux src des i l j =
  if i = l then ()
  else
    let n = Array.get src i in
      Array.set des j n;
      let i' = i + 1 in
      let j' = j + 1 in
      bcopy_aux src des i' l j'
in
let bcopy src des ss len ds =
  let se = ss + len in
  let srcl = Array.length src in
    if (se <= srcl) then
      let de = ds + len in
      let desl = Array.length des in
        if (de <= desl) then
          let fini = ss + len in
            bcopy_aux src des ss fini ds
        else ()
    else ()
in
let src = [|1; 2; 3|] in
let asz = 3 in
let des = Array.make asz 0 in
  bcopy src des 1 2 0;;
