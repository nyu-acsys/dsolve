






val add: 'a -> int -> [(b: 'a) t . || e0: 'b, e1: int, e2: [[], [v: v < e0, v: true, v: true, v: true, v: true]] 'b t, e3: [[], [v: v > e0, v: true, v: true, v: true, v: true]] 'b t, e4: int] -> [(b: 'a) t . || e0: 'b, e1: int, e2: [[], [v: v < e0, v: true, v: true, v: true, v: true]] 'b t, e3: [[], [v: v > e0, v: true, v: true, v: true, v: true]] 'b t, e4: int]
(*
val remove_min_binding: t: [(b: 'a) t . || e0: 'b, e1: int, e2: [[], [v: v < e0, v: true, v: true, v: true, v: true]] 'b t, e3: [[], [v: v > e0, v: true, v: true, v: true, v: true]] 'b t, e4: int] -> 'a * int * RGDTREE(v, true)

val merge: m: 'a -> t1: RGDTREE(v, [[], [v: v < m, v: true, v: true, v: true, v: true]], true) -> t2: RGDTREE(v, [[], [v: v > m, v: true, v: true, v: true, v: true]], BALW(t1, v, 2)) ->
  RTGDTREE(v, H(v) <= MAX(H(t1), H(t2)) + 1 && H(v) >= MAX(H(t1), H(t2)))
*)
val remove: 'a -> t: [(b: 'a) t . || e0: 'b, e1: int, e2: [[], [v: v < e0, v: true, v: true, v: true, v: true]] 'b t, e3: [[], [v: v > e0, v: true, v: true, v: true, v: true]] 'b t, e4: int] -> [(b: 'a) t . || e0: 'b, e1: int, e2: [[], [v: v < e0, v: true, v: true, v: true, v: true]] 'b t, e3: [[], [v: v > e0, v: true, v: true, v: true, v: true]] 'b t, e4: int]
