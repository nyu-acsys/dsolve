measure len = | E -> 0 | Bl (d, l, r, h) -> 1 + len l + len r | Br (d, l, r, h) -> 1 + len l + len r
measure height = | E -> 0 | Bl (d, l, r, h) -> h | Br (d, l, r, h) -> h
val insert: 'a -> t: [(b: 'a) avl . || e0: 'b, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e2 >= 0) && (height e2 <= height e1 && height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'b, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e2 >= 0) && (height e1 <= height e2 && height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] -> {v : [(b: 'a) avl . || e0: 'b, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e2 >= 0) && (height e2 <= height e1 && height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'b, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] 'b avl | (height e2 >= 0) && (height e1 <= height e2 && height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] | (height t <= height v && height v <= 1 + height t) && (len t <= len v && len v <= 1 + len t)}
