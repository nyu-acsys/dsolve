qualif L(x) : x.p1 <= x.p2;;
qualif M(x) : x.q1 <= x.q2;;
qualif P(x) : x.q4 >= x.q3;;
qualif STARTSIZE(k) : start + k <= Array.length arr;;
qualif STARTSIZELT(k) : start + k < Array.length arr;;
qualif LEISIZE(n) : n + i <= Array.length arr;;
qualif LTISIZE(n) : n + i < Array.length arr;;
qualif LEJSIZE(n) : n + j <= Array.length arr;;
qualif LTJSIZE(n) : n + j < Array.length arr;;
qualif LEASIZE(n) : n + a <= Array.length arr;;
qualif LTASIZE(n) : n + a < Array.length arr;;
qualif LE_P1SIZE(n) : n <= 1 + Array.length arr;;
qualif LT_P1SIZE(n) : n < 1 + Array.length arr;;
