qualif A(v) : sz l = v
qualif AA(v) : sz v = n
qualif B(v) : sz v = 1 + sz xs
qualif C(v) : sz v = sz xs - 1

qualif D(v) : sz v = sz e0
qualif E(v) : lev v = sz e1

qualif ZERO(v) : sz v = 0


qualif A(v) : sz ~A { * * } v
qualif B(v) : sz v = [0, 1, 2, 3]
qualif C(v): sz v = 1 + sz ~A

(*
qualif D(v): _meas_sz v = _meas_sz x 
qualif DD(v): _meas_sz v = _meas_sz xs 
qualif E(v): _meas_sz v = _meas_sz xs + _meas_sz ys
qualif EE(v): _meas_sz v + _meas_sz e0 = _meas_sz x
qualif F(v): _meas_sz v + _meas_sz xs + _meas_sz ys = _meas_sz ixs
qualif FF(v): _meas_sz v <= _meas_sz ixs
qualif E(v): _meas_sz v + _meas_sz e0 = _meas_sz ixs
qualif C(v) : __tag v = 0
qualif D(v) : __tag v = 1
*)
