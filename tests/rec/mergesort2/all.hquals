qualif EQ(v) : ~A { * * } v


qualif E(v): len v = len ~A + len ~B 
qualif LB(v): llen v = len ~A (* yes *)
qualif BL(v): len v = llen ~A

qualif V(v): ? Myset.eq (set_of v) (set_of xss)
qualif V(v): ? Myset.eq (set_of v) (Myset.of_list xs)
qualif V(v): ? Myset.eq (Myset.of_list v) (set_of xss)
qualif V(v): ? Myset.eq (Myset.of_list v) (Myset.cup (Myset.of_list xs) (Myset.of_list ys))

(* from the MLQ *)
qualif D(v): len v = len ~A 
qualif A(v): v = len ~A 
qualif LL(v): llen v = llen ~A
