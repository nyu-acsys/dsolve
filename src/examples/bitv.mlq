pred INVAR = (v) ((0 <= v.length) and (v.length <= (Array.length v.bits) * 30)) and (0 < Array.length v.bits)

lval create: {v: int | 0 < v} -> bool -> {t | INVAR}
lval normalize: {t | INVAR} -> unit
lval unsafe_get: c: {t | INVAR} -> {v: int | v < c.length and 0 <= v} -> int
lval unsafe_set: c: {t | INVAR} -> {v: int | v < c.length and 0 <= v} -> bool -> int
lval get: {t | INVAR} -> int -> bool
lval set: {t | INVAR} -> int -> bool -> unit
lval init: {v: int | 0 < v} -> (int -> bool) -> t
lval blit_bits: int -> i: int -> {v: int | ((0 <= v) and (i < v - 1)) and (v <= 30)}  -> c: int array -> {v: int | v < (Array.length c) and 0 <= v} -> unit
