qualif X_PLUS_N_LE_SZ(x) : x + n <= sz;;
qualif X_PLUS_S_LE_SZ(x) : x + s <= sz;;
qualif SUM_OF_THREE(x) : x = sz + sz - p - s;;
qualif QARRAY_LENGTH__AA_GE_0(_AA) : Array.length _AA >= 0;;
qualif QARRAY_LENGTH__AA_GE_1(_AA) : Array.length _AA >= 1;;
qualif QARRAY_LENGTH__AA_GE_10(_AA) : Array.length _AA >= 10;;
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_POST'(_AA) : Array.length _AA >= Array.length post';;
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_POST(_AA) : Array.length _AA >= Array.length post;;
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_SOURCE(_AA) : Array.length _AA >= Array.length source;;
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH__1_POST(_AA) : Array.length _AA >= Array.length _1_post;;
qualif QARRAY_LENGTH__AA_LE_0(_AA) : Array.length _AA <= 0;;
qualif QARRAY_LENGTH__AA_LE_1(_AA) : Array.length _AA <= 1;;
qualif QARRAY_LENGTH__AA_LE_10(_AA) : Array.length _AA <= 10;;
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_POST'(_AA) : Array.length _AA <= Array.length post';;
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_POST(_AA) : Array.length _AA <= Array.length post;;
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_SOURCE(_AA) : Array.length _AA <= Array.length source;;
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH__1_POST(_AA) : Array.length _AA <= Array.length _1_post;;
qualif QARRAY_LENGTH__AA_NE_0(_AA) : Array.length _AA != 0;;
qualif QARRAY_LENGTH__AA_NE_1(_AA) : Array.length _AA != 1;;
qualif QARRAY_LENGTH__AA_NE_10(_AA) : Array.length _AA != 10;;
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_POST'(_AA) : Array.length _AA != Array.length post';;
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_POST(_AA) : Array.length _AA != Array.length post;;
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_SOURCE(_AA) : Array.length _AA != Array.length source;;
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH__1_POST(_AA) : Array.length _AA != Array.length _1_post;;
qualif Q_AA_GE_0(_AA) : _AA >= 0;;
qualif Q_AA_GE_1(_AA) : _AA >= 1;;
qualif Q_AA_GE_10(_AA) : _AA >= 10;;
qualif Q_AA_GE_ARRAY_LENGTH_POST'(_AA) : _AA >= Array.length post';;
qualif Q_AA_GE_ARRAY_LENGTH_POST(_AA) : _AA >= Array.length post;;
qualif Q_AA_GE_ARRAY_LENGTH_SOURCE(_AA) : _AA >= Array.length source;;
qualif Q_AA_GE_ARRAY_LENGTH__1_POST(_AA) : _AA >= Array.length _1_post;;
qualif Q_AA_GE_N(_AA) : _AA >= n;;
qualif Q_AA_GE_P'(_AA) : _AA >= p';;
qualif Q_AA_GE_P(_AA) : _AA >= p;;
qualif Q_AA_GE_S(_AA) : _AA >= s;;
qualif Q_AA_GE_SZ(_AA) : _AA >= sz;;
qualif Q_AA_GE__1_N(_AA) : _AA >= _1_n;;
qualif Q_AA_LE_0(_AA) : _AA <= 0;;
qualif Q_AA_LE_1(_AA) : _AA <= 1;;
qualif Q_AA_LE_10(_AA) : _AA <= 10;;
qualif Q_AA_LE_ARRAY_LENGTH_POST'(_AA) : _AA <= Array.length post';;
qualif Q_AA_LE_ARRAY_LENGTH_POST(_AA) : _AA <= Array.length post;;
qualif Q_AA_LE_ARRAY_LENGTH_SOURCE(_AA) : _AA <= Array.length source;;
qualif Q_AA_LE_ARRAY_LENGTH__1_POST(_AA) : _AA <= Array.length _1_post;;
qualif Q_AA_LE_N(_AA) : _AA <= n;;
qualif Q_AA_LE_P'(_AA) : _AA <= p';;
qualif Q_AA_LE_P(_AA) : _AA <= p;;
qualif Q_AA_LE_S(_AA) : _AA <= s;;
qualif Q_AA_LE_SZ(_AA) : _AA <= sz;;
qualif Q_AA_LE__1_N(_AA) : _AA <= _1_n;;
qualif Q_AA_NE_0(_AA) : _AA != 0;;
qualif Q_AA_NE_1(_AA) : _AA != 1;;
qualif Q_AA_NE_10(_AA) : _AA != 10;;
qualif Q_AA_NE_ARRAY_LENGTH_POST'(_AA) : _AA != Array.length post';;
qualif Q_AA_NE_ARRAY_LENGTH_POST(_AA) : _AA != Array.length post;;
qualif Q_AA_NE_ARRAY_LENGTH_SOURCE(_AA) : _AA != Array.length source;;
qualif Q_AA_NE_ARRAY_LENGTH__1_POST(_AA) : _AA != Array.length _1_post;;
qualif Q_AA_NE_N(_AA) : _AA != n;;
qualif Q_AA_NE_P'(_AA) : _AA != p';;
qualif Q_AA_NE_P(_AA) : _AA != p;;
qualif Q_AA_NE_S(_AA) : _AA != s;;
