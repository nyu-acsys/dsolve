qualif QARRAY_LENGTH__AA_GE_1(_AA) : Array.length _AA >= 1
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_V1'(_AA) : Array.length _AA >= Array.length v1'
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_V1(_AA) : Array.length _AA >= Array.length v1
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_V2'(_AA) : Array.length _AA >= Array.length v2'
qualif QARRAY_LENGTH__AA_GE_ARRAY_LENGTH_V2(_AA) : Array.length _AA >= Array.length v2
qualif QARRAY_LENGTH__AA_GE_GET_PROD_I(_AA) : Array.length _AA >= get_prod_i
qualif QARRAY_LENGTH__AA_GE_GET_PROD_I_PLUS_SUM(_AA) : Array.length _AA >= get_prod_i_plus_sum
qualif QARRAY_LENGTH__AA_GE_GET_V1_I(_AA) : Array.length _AA >= get_v1_i
qualif QARRAY_LENGTH__AA_GE_GET_V2_I(_AA) : Array.length _AA >= get_v2_i
qualif QARRAY_LENGTH__AA_GE_I(_AA) : Array.length _AA >= i
qualif QARRAY_LENGTH__AA_GE_I_PLUS(_AA) : Array.length _AA >= i_plus
qualif QARRAY_LENGTH__AA_GE_N(_AA) : Array.length _AA >= n
qualif QARRAY_LENGTH__AA_GE_SUM(_AA) : Array.length _AA >= sum
qualif QARRAY_LENGTH__AA_GE_SZ(_AA) : Array.length _AA >= sz
qualif QARRAY_LENGTH__AA_GE_SZ_1(_AA) : Array.length _AA >= sz_1
qualif QARRAY_LENGTH__AA_GE_SZ_PLUS(_AA) : Array.length _AA >= sz_plus
qualif QARRAY_LENGTH__AA_LE_0(_AA) : Array.length _AA <= 0
qualif QARRAY_LENGTH__AA_LE_1(_AA) : Array.length _AA <= 1
qualif QARRAY_LENGTH__AA_LE_40(_AA) : Array.length _AA <= 40
qualif QARRAY_LENGTH__AA_LE_555(_AA) : Array.length _AA <= 555
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_V1'(_AA) : Array.length _AA <= Array.length v1'
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_V1(_AA) : Array.length _AA <= Array.length v1
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_V2'(_AA) : Array.length _AA <= Array.length v2'
qualif QARRAY_LENGTH__AA_LE_ARRAY_LENGTH_V2(_AA) : Array.length _AA <= Array.length v2
qualif QARRAY_LENGTH__AA_LE_GET_PROD_I(_AA) : Array.length _AA <= get_prod_i
qualif QARRAY_LENGTH__AA_LE_GET_PROD_I_PLUS_SUM(_AA) : Array.length _AA <= get_prod_i_plus_sum
qualif QARRAY_LENGTH__AA_LE_GET_V1_I(_AA) : Array.length _AA <= get_v1_i
qualif QARRAY_LENGTH__AA_LE_GET_V2_I(_AA) : Array.length _AA <= get_v2_i
qualif QARRAY_LENGTH__AA_LE_I(_AA) : Array.length _AA <= i
qualif QARRAY_LENGTH__AA_LE_I_PLUS(_AA) : Array.length _AA <= i_plus
qualif QARRAY_LENGTH__AA_LE_N(_AA) : Array.length _AA <= n
qualif QARRAY_LENGTH__AA_LE_SUM(_AA) : Array.length _AA <= sum
qualif QARRAY_LENGTH__AA_LE_SZ(_AA) : Array.length _AA <= sz
qualif QARRAY_LENGTH__AA_LE_SZ_1(_AA) : Array.length _AA <= sz_1
qualif QARRAY_LENGTH__AA_LE_SZ_PLUS(_AA) : Array.length _AA <= sz_plus
qualif QARRAY_LENGTH__AA_NE_0(_AA) : Array.length _AA != 0
qualif QARRAY_LENGTH__AA_NE_1(_AA) : Array.length _AA != 1
qualif QARRAY_LENGTH__AA_NE_40(_AA) : Array.length _AA != 40
qualif QARRAY_LENGTH__AA_NE_555(_AA) : Array.length _AA != 555
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_V1'(_AA) : Array.length _AA != Array.length v1'
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_V1(_AA) : Array.length _AA != Array.length v1
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_V2'(_AA) : Array.length _AA != Array.length v2'
qualif QARRAY_LENGTH__AA_NE_ARRAY_LENGTH_V2(_AA) : Array.length _AA != Array.length v2
qualif QARRAY_LENGTH__AA_NE_GET_PROD_I(_AA) : Array.length _AA != get_prod_i
qualif QARRAY_LENGTH__AA_NE_GET_PROD_I_PLUS_SUM(_AA) : Array.length _AA != get_prod_i_plus_sum
qualif QARRAY_LENGTH__AA_NE_GET_V1_I(_AA) : Array.length _AA != get_v1_i
qualif QARRAY_LENGTH__AA_NE_GET_V2_I(_AA) : Array.length _AA != get_v2_i
qualif QARRAY_LENGTH__AA_NE_I(_AA) : Array.length _AA != i
qualif QARRAY_LENGTH__AA_NE_I_PLUS(_AA) : Array.length _AA != i_plus
qualif QARRAY_LENGTH__AA_NE_N(_AA) : Array.length _AA != n
qualif QARRAY_LENGTH__AA_NE_SUM(_AA) : Array.length _AA != sum
qualif QARRAY_LENGTH__AA_NE_SZ(_AA) : Array.length _AA != sz
qualif QARRAY_LENGTH__AA_NE_SZ_1(_AA) : Array.length _AA != sz_1
qualif QARRAY_LENGTH__AA_NE_SZ_PLUS(_AA) : Array.length _AA != sz_plus
qualif Q_AA_GE_0(_AA) : _AA >= 0
qualif Q_AA_GE_1(_AA) : _AA >= 1
qualif Q_AA_GE_ARRAY_LENGTH_V1'(_AA) : _AA >= Array.length v1'
qualif Q_AA_GE_ARRAY_LENGTH_V1(_AA) : _AA >= Array.length v1
qualif Q_AA_GE_ARRAY_LENGTH_V2'(_AA) : _AA >= Array.length v2'
qualif Q_AA_GE_ARRAY_LENGTH_V2(_AA) : _AA >= Array.length v2
qualif Q_AA_GE_GET_PROD_I(_AA) : _AA >= get_prod_i
qualif Q_AA_GE_GET_PROD_I_PLUS_SUM(_AA) : _AA >= get_prod_i_plus_sum
qualif Q_AA_GE_GET_V1_I(_AA) : _AA >= get_v1_i
qualif Q_AA_GE_GET_V2_I(_AA) : _AA >= get_v2_i
qualif Q_AA_GE_I(_AA) : _AA >= i
qualif Q_AA_GE_I_PLUS(_AA) : _AA >= i_plus
qualif Q_AA_GE_N(_AA) : _AA >= n
qualif Q_AA_GE_SUM(_AA) : _AA >= sum
qualif Q_AA_GE_SZ(_AA) : _AA >= sz
qualif Q_AA_GE_SZ_1(_AA) : _AA >= sz_1
qualif Q_AA_GE_SZ_PLUS(_AA) : _AA >= sz_plus
qualif Q_AA_LE_0(_AA) : _AA <= 0
qualif Q_AA_LE_1(_AA) : _AA <= 1
qualif Q_AA_LE_ARRAY_LENGTH_V1'(_AA) : _AA <= Array.length v1'
qualif Q_AA_LE_ARRAY_LENGTH_V1(_AA) : _AA <= Array.length v1
qualif Q_AA_LE_ARRAY_LENGTH_V2'(_AA) : _AA <= Array.length v2'
qualif Q_AA_LE_ARRAY_LENGTH_V2(_AA) : _AA <= Array.length v2
qualif Q_AA_LE_GET_PROD_I(_AA) : _AA <= get_prod_i
qualif Q_AA_LE_GET_PROD_I_PLUS_SUM(_AA) : _AA <= get_prod_i_plus_sum
qualif Q_AA_LE_GET_V1_I(_AA) : _AA <= get_v1_i
qualif Q_AA_LE_GET_V2_I(_AA) : _AA <= get_v2_i
qualif Q_AA_LE_I(_AA) : _AA <= i
qualif Q_AA_LE_I_PLUS(_AA) : _AA <= i_plus
qualif Q_AA_LE_N(_AA) : _AA <= n
qualif Q_AA_LE_SUM(_AA) : _AA <= sum
qualif Q_AA_LE_SZ(_AA) : _AA <= sz
qualif Q_AA_LE_SZ_1(_AA) : _AA <= sz_1
qualif Q_AA_LE_SZ_PLUS(_AA) : _AA <= sz_plus
qualif Q_AA_NE_0(_AA) : _AA != 0
qualif Q_AA_NE_1(_AA) : _AA != 1
qualif Q_AA_NE_ARRAY_LENGTH_V1'(_AA) : _AA != Array.length v1'
qualif Q_AA_NE_ARRAY_LENGTH_V1(_AA) : _AA != Array.length v1
qualif Q_AA_NE_ARRAY_LENGTH_V2'(_AA) : _AA != Array.length v2'
qualif Q_AA_NE_ARRAY_LENGTH_V2(_AA) : _AA != Array.length v2
qualif Q_AA_NE_GET_PROD_I(_AA) : _AA != get_prod_i
qualif Q_AA_NE_GET_PROD_I_PLUS_SUM(_AA) : _AA != get_prod_i_plus_sum
qualif Q_AA_NE_GET_V1_I(_AA) : _AA != get_v1_i
qualif Q_AA_NE_GET_V2_I(_AA) : _AA != get_v2_i
qualif Q_AA_NE_I(_AA) : _AA != i
qualif Q_AA_NE_I_PLUS(_AA) : _AA != i_plus
qualif Q_AA_NE_N(_AA) : _AA != n
qualif Q_AA_NE_SUM(_AA) : _AA != sum
qualif Q_AA_NE_SZ(_AA) : _AA != sz
qualif Q_AA_NE_SZ_1(_AA) : _AA != sz_1

let dotprod v1 v2 = 
	let rec loop n sum i =
		if i = n then sum else 
      let v1_i = Array.get v1 i in  
      let v2_i = Array.get v2 i in
      let newsum = (v1_i * v2_i) + sum in
        loop n newsum (i + 1)
	in loop (Array.length v1) 0 0 

let res =
  let _none = Random.init 555 in
  let sz = Random.int 40 in
  let sz_plus = sz + 1 in
  let v1' = Array.make sz_plus 1 in
  let v2' = Array.make sz_plus 1 in
    dotprod v1' v2'
