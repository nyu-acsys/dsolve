val find : r: (i: int, int) Store.t -> p: (i: int, {v: int | (v = Store.get supr i) && (((v=i) || (Store.get r i < Store.get r v)) && true)}) Store.t -> int -> (i: int, {v: int | (v = Store.get supr i) && (((v=i) || (Store.get r i < Store.get r v)) && ((Store.get p i = i) -> (v = i)))}) Store.t * {v : int | (Store.get e0 v = v)}
val union: r: (i: int, int) Store.t -> p: (i: int, {v: int | (v = Store.get supr i) && (((v=i) || (Store.get r i < Store.get r v)) && true)}) Store.t -> int -> int -> (i: int, int) Store.t * (i: int, {v: int | (v = Store.get supr i) && (((v=i) || (Store.get e0 i < Store.get e0 v)) && true)}) Store.t
