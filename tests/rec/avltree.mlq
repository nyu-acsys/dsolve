measure len = | E -> 0 | Bl (d, l, r, h) -> 1 + len l + len r | Br (d, l, r, h) -> 1 + len l + len r
measure height = | E -> 0 | Bl (d, l, r, h) -> h | Br (d, l, r, h) -> h
(*
val insert: 'a -> t: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e2 <= height e1 and height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'a, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e1 <= height e2 and height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] -> {v : [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e2 <= height e1 and height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'a, {e1: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e1 <= height e2 and height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] | (height t <= height v and height v <= 1 + height t) and (len t <= len v and len v <= 1 + len t)}
val insert: 'a -> [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | true}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | true}, {e3: int | true} || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | true}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | true}, {e3: int | true} ] -> [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | true}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | true}, {e3: int | true} || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | true}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | true}, {e3: int | true} ]
*)
val insert: 'a -> t: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e2 <= height e1 and height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e1 <= height e2 and height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] -> {v: [[], [v: true, v: true, v: true, v: true], [v: true, v: true, v: true, v: true]] [z: avl . || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e2 <= height e1 and height e1 <= 1 + height e2)}, {e3: int | (e3 = 1 + height e1)} || e0: 'a, {e1: [[], [v: v < e0, v: true, v: true, v: true], [v: v < e0, v: true, v: true, v: true]] z | (height e1 >= 0)}, {e2: [[], [v: v > e0, v: true, v: true, v: true], [v: v > e0, v: true, v: true, v: true]] z | (height e2 >= 0) and (height e1 <= height e2 and height e2 <= 1 + height e1)}, {e3: int | (e3 = 1 + height e2)} ] | (height t <= height v and height v <= 1 + height t) and (len t <= len v and len v <= 1 + len t)}
