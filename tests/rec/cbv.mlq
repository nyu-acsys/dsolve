

measure len =
  | [] -> 0
  | x :: xs -> 1 + len xs

measure size =
  | One -> 0
  | Shift e -> size e + 1
  | Lam e -> size e - 1
  | App (e1, e2) -> (size e1 > size e2 ? size e1 : size e2)




val evaluate: {v: [[], [v: true], [v: true], [v: true, v: true]] [l: lamexp . || e0: [[], [v: true], [v: true], [v: true, v: true]] l || e0: [[], [v: true], [v: true], [v: true, v: true]] l || e0: [[], [v: true], [v: true], [v: true, v: true]] l, e1: [[], [v: true], [v: true], [v: true, v: true]] l] | size v = 0} -> closure
