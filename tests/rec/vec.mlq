measure height =
  | Empty -> 0
  | Node (_, _, _, _, _, h) -> h
measure length =
  | Empty -> 0
  | Node (_, cl, _, _, cr, _) -> 1 + cl + cr
val makenode: l: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> 'a -> r: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v <= height l + 2 and height v >= height l - 2)))} ->
  {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v = (height l >= height r ? height l : height r) + 1 and length v = 1 + length r + length l))}
val create: 'a -> n: {v: int | v >= 0} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (length v = n))}
val bal: l: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> 'a -> r: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v <= height l + 3 and height v >= height l - 3)))} ->
  {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v <= (height l >= height r ? height l : height r) + 1 and height v >= (height l >= height r ? height l : height r) + ((height r <= height l + 2 and height r >= height l - 2) ? 1 : 0)) and (length v = length l + length r + 1)))}
val recbal: l: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> 'a -> r: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} ->
  {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= ((height l >= height r ? height l : height r) + ((height r <= height l + 2 and height r >= height l - 2) ? 1 : 0-1)) and height v <= ((height l >= height r ? height l : height r) + 1)) and (length v = length l + length r + 1)))}
val empty: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v = 0 and length v = 0))}
val is_empty: t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> {v: bool | v = (height t = 0 or length t = 0 ? 1: 0)}
val singleton: 'a -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v = 1 and length v = 1))}
val get: i: {v: int | v >= 0} -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0 and length v > i))} -> 'a
val set: i: {v: int | v >= 0} -> 'a -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0 and length v > i))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v = height t and length v = length t))}
val append: 'a -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v <= height t + 1 and height t >= height t - 1) and length v = length t + 1))}
val setappend: 'a -> 'a -> i: {v: int | v >= 0} -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= 0) and length v > 0))} ->
  {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (length v = (length t > i ? length t : i+1) and height v >= height t))}
val leftmost: t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0))} -> 'a
val remove_leftmost: t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= (height t - 1) and height v <= (height t)) and length v = length t - 1))}
val merge: t1: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> t2: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v >= height t1 - 2 and height v <= height t1 + 3))} ->
  {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= ((height t1 >= height t2 ? height t1 : height t2)) and height v <= ((height t1 >= height t2 ? height t1 : height t2) + 1)) and (length v = length t1 + length t2 + 0)))}
val concat: t1: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> t2: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (true))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= ((height t1 >= height t2 ? height t1 : height t2) - 2) and height v <= ((height t1 >= height t2 ? height t1 : height t2) + 1)) and (length v = length t1 + length t2 + 0)))}
val pop: i: {v: int | v >= 0} -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0 and length v > i))} -> 'a * {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= (height t - 1) and height v <= (height t)) and length v = length t - 1))}
val remove: i: {v: int | v >= 0} -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (height v > 0 and length v > i))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= (height t - 1) and height v <= (height t)) and length v = length t - 1))}
val insert: i: {v: int | v >= 0} -> 'a -> t: {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (length v >= i))} -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and ((height v >= (height t) and height v <= (height t + 1)) and length v = length t + 1))}
(*
val sub: i: {v: int | v >= 0} -> j: {v: int | v >= i} ->
    t: rgdtree(v, l(v) >= 0 and l(v) > j) -> rgdtree(v, h(v) <= h(t) and l(v) = j-i)
val sub: i: int -> j: int ->
    t: rgdtree(v, l(v) >= 0) -> rgdtree(v, h(v) <= h(t) and l(v) = j-i)
*)
val iteri: (i: int -> 'a -> 'a) -> {v: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] [z: t . || {e0: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e0 >= 0)}, {e1: int | (e1 = length e0 and e1 >= 0)}, e2: 'a, {e3: [[], [v: true, v: true, v: true, v: true, v: true, v: true]] z | (height e3 <= height e0 + 2 and height e3 >= height e0 - 2) and (height e3 >= 0)}, {e4: int | (e4 = length e3 and e4 >= 0)}, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) and e5 >= 0)}] | ((height v >= 0) and (i >= 0 and i < length v))} -> unit
