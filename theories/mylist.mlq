(* the following will bring z3 to a screeching halt *)
(* axiom deduce:  forall (x: obj, xs: obj. (? mem x xs) => (exists (y: obj, ys: obj. xs = y::ys and (x = y or (? mem x ys))))) *)

val mem: x: 'a -> xs: [[], [v: true, v: true]] [t: list . || e0: 'a, e1: [[], [v: true, v: true]] t] -> {v: bool | v = mem x xs}

embed obj for 'a list

axiom consmem: forall (x: obj, xs: obj. (? mem x (x::xs)))
axiom weaken:  forall (x: obj, y: obj, xs: obj. (? mem x xs) => (? mem x (y::xs)))
