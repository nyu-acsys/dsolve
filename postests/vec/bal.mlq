measure height =
  | Empty -> 0
  | Node (_, _, _, _, _, h) -> h
measure length =
  | Empty -> 0
  | Node (_, cl, _, _, cr, _) -> 1 + cl + cr
val create: 'a -> n: {v: int | v >= 0} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))}
val empty: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v = 0))}
val is_empty: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: bool | ((? v) iff (height t = 0))}
val singleton: 'a -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v = 1))}
val get: i: {v: int | v >= 0} -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v > 0))} -> 'a
val set: i: {v: int | v >= 0} -> 'a -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v > 0))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v = height t))}
val append: 'a -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v <= height t + 1 && height t >= height t - 1)))}
val setappend: 'a -> 'a -> i: {v: int | v >= 0} -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v >= 0)))} ->
  {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v >= height t))}
val concat: t1: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> t2: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v >= ((height t1 >= height t2 ? height t1 : height t2) - 2) && height v <= ((height t1 >= height t2 ? height t1 : height t2) + 1))))}
val pop: i: {v: int | v >= 0} -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v > 0))} -> ('a * {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v >= (height t - 1) && height v <= (height t))))})
val remove: i: {v: int | v >= 0} -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v > 0))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v >= (height t - 1) && height v <= (height t))))}
val insert: i: {v: int | v >= 0} -> 'a -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && ((height v >= (height t) && height v <= (height t + 1))))}
val sub: i: {v: int | v >= 0} -> j: {v: int | v >= i} ->
    t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (height v <= height t))}
(*
val iteri: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | 0 <= v} -> 'a -> 'b) -> unit
val rangeiteri: i: int -> j: int -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | v >= i && v <= j} -> 'a -> unit) -> unit
val revrangeiteri: i: int -> j: int -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | v >= i && v <= j} -> 'a -> unit) -> unit
val mapi: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | 0 <= v} -> 'a -> 'b) -> {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'b, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))}
val foldi: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | 0 <= v} -> 'a -> 'b -> 'b) -> 'b -> 'b
val rangefoldi: i: int -> j: int -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | v >= i && v <= j} -> 'a -> 'b -> 'b) -> 'b -> 'b
val revfoldi: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | 0 <= v} -> 'a -> 'b -> 'b) -> 'b -> 'b
val revrangefoldi: i: int -> j: int -> t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> ({v: int | v >= i && v <= j} -> 'a -> 'b -> 'b) -> 'b -> 'b
val to_array: t: {v: [(a: 'b) t . || {e0: 'a t | (height e0 >= 0)}, e1: int, e2: 'a, {e3: 'a t | (height e3 <= height e0 + 2 && height e3 >= height e0 - 2) && (height e3 >= 0)}, e4: int, {e5: int | ((e5 = (height e0 >= height e3 ? height e0 : height e3) + 1) && e5 >= 0)}] | ((height v >= 0) && (true))} -> {v: 'a array | true}
*)
