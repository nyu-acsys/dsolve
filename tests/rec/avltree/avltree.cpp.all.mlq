#define RV(p)	[v: p, v: true, v: true, v: true]
#define LT  	[[], RV(v < e0), RV(v < e0)]
#define GT  	[[], RV(v > e0), RV(v > e0)]
#define TT  	[[], RV(true), RV(true)]
#define H0(x)	(height x >= 0)
#define HD(x,y)	(x = 1 + height y)
#define BND(f,x,y)	(f x <= f y and f y <= 1 + f x)

#define TREE(rhol1, l1, rhor1, r1, h1, rhol2, l2, rhor2, r2, h2)  \
           TT [z: avl . || e0: 'a, {e1: rhol1 z | l1}, {e2: rhor1 z | r1}, {e3: int | h1} \
	                || e0: 'a, {e1: rhol2 z | l2}, {e2: rhor2 z | r2}, {e3: int | h2} ]


#define STREE(l1, r1, h1, l2, r2, h2) \
  TREE(LT, l1, GT, r1, h1, LT, l2, GT, r2, h2)

#define BALSTREE \
	STREE(H0(e1), H0(e2) and BND(height,e2,e1), HD(e3,e1), H0(e1), H0(e2) and BND(height,e1,e2), HD(e3,e2))


measure len = | E -> 0 | Bl (d, l, r, h) -> 1 + len l + len r | Br (d, l, r, h) -> 1 + len l + len r

measure height = | E -> 0 | Bl (d, l, r, h) -> h | Br (d, l, r, h) -> h 




val insert: 'a -> t: BALSTREE -> {v: BALSTREE | BND(height, t, v) and BND(len, t, v)}

