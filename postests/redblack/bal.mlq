



(* Color, balance, BST interfaces *)







measure color =
  | Empty -> 0
  | Black (a, b, c) -> 1
  | Red (a, b, c) -> 2
  | Purple (a, b, c) -> 3



measure height =
  | Empty -> 0
  | Red (e, l, r) -> (height l > height r ? height l : height r)
  | Black (e, l, r) -> (height l > height r ? height l : height r) + 1
  | Purple (e, l, r) -> (height l > height r ? height l : height r)

(*

val restore_right: e: 'a -> l: GBT -> r: {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z] | height v = height l} -> GBT
val restore_left: e: 'a -> l: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z] -> r: {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z] | NOP(v) && height v = height l} -> GBT
val ins1: key: 'a -> d: GBT -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z]

*)

val insert: dict: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z] -> key: 'a -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z || e0: 'a, e1: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z, e2: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] z]

(* BST interfaces





val restore_right:
  e: 'a ->
  lt: [[], LR(e), LR(e), LR(e), LR(e)] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z] ->
  r: [[], RR(e), RR(e), RR(e), RR(e)] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z] ->
  [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z]

val restore_left:
  e: 'a ->
  l: [[], LR(e), LR(e), LR(e), LR(e)] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z] ->
  rt: [[], RR(e), RR(e), RR(e), RR(e)] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z] ->
  [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z]

val insert: dict: [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z] -> key: 'a -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: dict . || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z || e0: 'a, e1: LN(e0) z, e2: RN(e0) z]

*)
