measure set_of =
    Empty -> Myaset.empty
  | Same (x, l, r) -> Myaset.cup (Myaset.sng x) (Myaset.cup (set_of l) (set_of r))
  | Diff (x, l, r) -> Myaset.cup (Myaset.sng x) (Myaset.cup (set_of l) (set_of r))
val empty: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val add: x: 'a -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] | (? Myaset.eq (set_of v) (Myaset.cup (set_of h) (Myaset.sng x)))}
val maximum: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> 'a * {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z] | (? Myaset.mem e0 (set_of v)) and (set_of v) = (set_of h)}
val extract_last: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> 'a * {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] | (? Myaset.eq (set_of h) (Myaset.cup (set_of v) (Myaset.sng e0)))}
(*val descent: x: 'a -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> 'a * {v: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] | (? Myaset.eq (Myaset.cup (set_of h) (Myaset.sng x)) (Myaset.cup (set_of v) (Myaset.sng e0))) }
val remove: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val iter: f: ('a -> 'b) -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> unit
val fold: f: ('a -> 'b -> 'b) -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> b: 'b -> 'b
*)
(*val add: x: 'a -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val maximum: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> 'a * [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0 and v <= e0, v: true, v: true], [v: v <= e0 and v <= e0, v: true, v: true]] z]
val extract_last: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> 'a * [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val descent: x: 'a -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val remove: h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z]
val iter: f: ('a -> 'b) -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> unit
val fold: f: ('a -> 'b -> 'b) -> h: [[], [v: true, v: true, v: true], [v: true, v: true, v: true]] [z: t . || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z || e0: 'a, e1: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z, e2: [[], [v: v <= e0, v: true, v: true], [v: v <= e0, v: true, v: true]] z] -> b: 'b -> 'b*)
