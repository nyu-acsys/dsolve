qualif FALSE(v) : 1 = 0
qualif HH(v)    : v = ~A
qualif TCOMP(v) : e0 { * * } v
qualif COMP(v)  : ~A { * * } v
qualif INTLIT(v): ^ { * * } v 

qualif BAL(v)(*A: 'a t*): v { <=, >= } height ~A {< -, + >} [1, 2, 3]
qualif BAL(v)   : v { <=, >= } height e2 {< -, + >} [1, 2, 3]

qualif BAL(v)(*A: 'a t*)   : height v { <=, >= } height ~A {< -, + >} [1, 2, 3]
(* typing the qualifier seems to cull too much. this is a bug *)
qualif BAL(v)   : height v { <=, >= } height e2 {< -, + >} [1, 2, 3]

qualif H(v)(A: 'a t): height v { * * } height ~A
qualif H(v)     : height v { * * } height e2
qualif H(v)(A: 'a t): v = height ~A

qualif Ph(v)    : v = (height l >= height r ? height l + 1 : height r + 1)
qualif Ph(v)    : v = (height e2 >= height e3 ? height e2 + 1 : height e3 + 1)
qualif Phh(v)   : height v = (height ~A >= height ~B ? height ~A + 1 : height ~B + 1)
qualif Phh(v)   : height v <= (height ~A >= height ~B ? height ~A + 1 : height ~B + 1) 
qualif Phh(v)   : height v >= (height ~A >= height ~B ? height ~A : height ~B)
                  
