# 1 "lexer.mll"
 

  open Parser


# 8 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\220\255\221\255\022\000\226\255\227\255\228\255\072\000\
    \230\255\130\000\232\255\233\255\234\255\026\000\001\000\237\255\
    \238\255\173\000\183\000\139\000\244\255\245\255\145\000\247\255\
    \001\000\248\255\020\000\250\255\251\255\018\000\215\000\005\000\
    \254\255\019\000\252\255\023\000\253\255\017\000\033\000\249\255\
    \053\000\056\000\050\000\065\000\246\255\243\255\051\000\242\255\
    \240\255\236\255\052\000\235\255\222\255\229\255\126\000\132\000\
    \144\000\136\000\225\255\224\255\146\000\223\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\034\000\255\255\255\255\255\255\035\000\
    \255\255\024\000\255\255\255\255\255\255\034\000\035\000\255\255\
    \255\255\016\000\035\000\034\000\255\255\255\255\034\000\255\255\
    \007\000\255\255\034\000\255\255\255\255\034\000\035\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\014\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\000\000\000\000\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\255\255\255\255\000\000\
    \000\000\255\255\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\000\000\255\255\255\255\000\000\
    \255\255\255\255\255\255\255\255\000\000\000\000\255\255\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\255\255\255\255\
    \255\255\255\255\000\000\000\000\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\031\000\025\000\025\000\031\000\024\000\031\000\000\000\
    \000\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \031\000\000\000\000\000\000\000\000\000\031\000\010\000\007\000\
    \012\000\005\000\000\000\018\000\000\000\030\000\027\000\020\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\028\000\000\000\014\000\023\000\049\000\008\000\
    \000\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\011\000\021\000\004\000\000\000\000\000\
    \000\000\002\000\029\000\002\000\002\000\026\000\022\000\002\000\
    \002\000\019\000\002\000\002\000\013\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\003\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\015\000\016\000\006\000\056\000\050\000\
    \037\000\033\000\035\000\036\000\038\000\055\000\039\000\034\000\
    \054\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
    \053\000\053\000\053\000\045\000\042\000\043\000\044\000\048\000\
    \051\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
    \052\000\052\000\052\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\047\000\041\000\060\000\059\000\057\000\058\000\061\000\
    \000\000\046\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\040\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\000\000\000\000\000\000\000\000\032\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\024\000\000\000\000\000\031\000\255\255\
    \255\255\031\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\031\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\000\000\000\000\014\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\003\000\013\000\
    \026\000\029\000\033\000\035\000\037\000\003\000\038\000\033\000\
    \003\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\040\000\041\000\042\000\043\000\046\000\
    \050\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\007\000\007\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\017\000\017\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\018\000\
    \018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\019\000\022\000\054\000\055\000\056\000\057\000\060\000\
    \255\255\019\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\022\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\255\255\255\255\255\255\255\255\030\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 19 "lexer.mll"
      ( token lexbuf )
# 180 "lexer.ml"

  | 1 ->
# 21 "lexer.mll"
      ( ARROW )
# 185 "lexer.ml"

  | 2 ->
# 23 "lexer.mll"
      ( BOOL )
# 190 "lexer.ml"

  | 3 ->
# 25 "lexer.mll"
      ( BOTTOM )
# 195 "lexer.ml"

  | 4 ->
# 27 "lexer.mll"
      ( COLON )
# 200 "lexer.ml"

  | 5 ->
# 29 "lexer.mll"
      ( DOT )
# 205 "lexer.ml"

  | 6 ->
# 31 "lexer.mll"
      ( ELSE )
# 210 "lexer.ml"

  | 7 ->
# 33 "lexer.mll"
      ( EOL )
# 215 "lexer.ml"

  | 8 ->
# 35 "lexer.mll"
      ( EQUAL )
# 220 "lexer.ml"

  | 9 ->
# 37 "lexer.mll"
      ( FALSE )
# 225 "lexer.ml"

  | 10 ->
# 39 "lexer.mll"
      ( FORALLTYPE )
# 230 "lexer.ml"

  | 11 ->
# 41 "lexer.mll"
      ( FORALLQUAL )
# 235 "lexer.ml"

  | 12 ->
# 43 "lexer.mll"
      ( FUN )
# 240 "lexer.ml"

  | 13 ->
# 45 "lexer.mll"
      ( IF )
# 245 "lexer.ml"

  | 14 ->
# 47 "lexer.mll"
      ( IN )
# 250 "lexer.ml"

  | 15 ->
# 49 "lexer.mll"
      ( INT )
# 255 "lexer.ml"

  | 16 ->

  let intstring = Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 51 "lexer.mll"
      (	INTLITERAL(int_of_string intstring) )
# 262 "lexer.ml"

  | 17 ->
# 53 "lexer.mll"
      ( JOIN )
# 267 "lexer.ml"

  | 18 ->
# 55 "lexer.mll"
      ( LCURLY )
# 272 "lexer.ml"

  | 19 ->
# 57 "lexer.mll"
      ( LESSEQ )
# 277 "lexer.ml"

  | 20 ->
# 59 "lexer.mll"
      ( LET )
# 282 "lexer.ml"

  | 21 ->
# 61 "lexer.mll"
      ( LPAREN )
# 287 "lexer.ml"

  | 22 ->
# 63 "lexer.mll"
      ( LSQUARE )
# 292 "lexer.ml"

  | 23 ->
# 65 "lexer.mll"
      ( MEET )
# 297 "lexer.ml"

  | 24 ->
# 67 "lexer.mll"
      ( QLITERAL (Lexing.lexeme lexbuf) )
# 302 "lexer.ml"

  | 25 ->
# 69 "lexer.mll"
      ( QUESTION )
# 307 "lexer.ml"

  | 26 ->
# 71 "lexer.mll"
      ( let s = Lexing.lexeme lexbuf in
	let name = String.sub s 1 (String.length s - 1) in
	  QVAR name )
# 314 "lexer.ml"

  | 27 ->
# 75 "lexer.mll"
      ( RCURLY )
# 319 "lexer.ml"

  | 28 ->
# 77 "lexer.mll"
      ( RPAREN )
# 324 "lexer.ml"

  | 29 ->
# 79 "lexer.mll"
      ( RSQUARE )
# 329 "lexer.ml"

  | 30 ->
# 81 "lexer.mll"
      ( THEN )
# 334 "lexer.ml"

  | 31 ->
# 83 "lexer.mll"
      ( TOP )
# 339 "lexer.ml"

  | 32 ->
# 85 "lexer.mll"
      ( TRUE )
# 344 "lexer.ml"

  | 33 ->
# 87 "lexer.mll"
      ( let s = Lexing.lexeme lexbuf in
	let name = String.sub s 1 (String.length s - 1) in
	  TVAR name )
# 351 "lexer.ml"

  | 34 ->

  let name = Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 91 "lexer.mll"
      ( VAR (String.make 1 name) )
# 358 "lexer.ml"

  | 35 ->
# 93 "lexer.mll"
      ( token lexbuf )
# 363 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

