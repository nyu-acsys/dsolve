qualif EQ(v)  : v = ~A				(* non - spec *)
qualif ROOT(v)(A: (int, int) Store.t): Store.get ~A v = v			(* non - spec *)
qualif BIND(v)(A: (int, int) Store.t, B: int): v = Store.get ~A ~B
qualif PRNT(v)(A: (int, int) Store.t, B: int): (v = ~B) or (Store.get ~A ~B < Store.get ~A v)
qualif PRES(v)(A: (int, int) Store.t, B: int): ((Store.get ~A ~B = ~B) -> (v = ~B))
