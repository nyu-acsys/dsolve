val set: x: (m: 'a, 'b) t -> k: 'a -> l: 'b[k/m] -> {v: (n: 'a, {v: 'b[n/m] | v = get supr n}) t | v = set x k l}

val get: m: ('a, 'b) t -> k: 'a -> 'b[k/e0][m/supr]

val iter: ('a, 'b) t -> (k: 'a -> 'b[k/e0] -> unit) -> unit

val iteri: ('a, 'b) t -> (int -> k: 'a -> 'b[k/e0] -> unit) -> unit

val fold: ('a, 'b) t -> (k: 'a -> 'b[k/e0] -> 'a -> 'a) -> 'a -> 'a

val empty: (n: 'a, 'b) t

val init: n: int -> (m: int -> 'a) ->  ({v: int | v < n and v >= 0}, {v: 'a[e0/m] | v = get supr n}) t
